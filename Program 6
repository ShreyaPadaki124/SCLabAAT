#6 PSO

import numpy as np
def f(x):
  return x**2+4*x+4
pos=np.random.uniform(-10,10,10)
vel=np.zeros_like(pos)
pbest=pos.copy()
gbest=pos[np.argmin(f(pos))]

for _ in range(50):
  r1,r2=np.random.rand(), np.random.rand()
  vel=0.5*vel + 0.8*r1*(pbest-pos) + 0.9*r2*(gbest-pos)
  pos+=vel
  pbest=np.where(f(pos)<f(pbest), pos,pbest)
  gbest=pbest[np.argmin(f(pbest))]
print("Best Solution found:", gbest)
